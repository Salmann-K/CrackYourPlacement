class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
    List<List<Integer>> result = new ArrayList<>();
    Queue<TreeNode> ans = new LinkedList<>(); 
    if(root == null) return result;
    ans.add(root);
    int dir=1;
    while(!ans.isEmpty()){
        int size = ans.size();
        List<Integer> level = new ArrayList<>();
        for(int i = 0; i < size; i++){
            TreeNode curr = ans.poll();
            level.add(curr.val);
            if (curr.left != null) {
                ans.add(curr.left);
            }
            if (curr.right != null) {
                ans.add(curr.right);
            }
            
        }
        if(dir%2==0) {
            result.add(reverseList(level));
        }else{
            result.add(level);
        }
        dir++;
    }
    return result;
    }
    
    public static List<Integer> reverseList(List<Integer> list) {
        Collections.reverse(list);
        return list;
    }
}
