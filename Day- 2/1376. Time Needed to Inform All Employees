class Solution {
    class Pair {
        int child;
        int time;
        
        public Pair(int child, int time) {
            this.child = child;
            this.time = time;
        }
    }
    
    public int numOfMinutes(int n, int headID, int[] manager, int[] informTime) {
        ArrayList<ArrayList<Integer>> adj = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            adj.add(new ArrayList<>());
        }
        
        for (int i = 0; i < n; i++) {
            if (manager[i] != -1) {  
                adj.get(manager[i]).add(i);
            }
        }

        Queue<Pair> q = new LinkedList<>();
        q.add(new Pair(headID, 0));
        int maxTime = 0;
        
        while (!q.isEmpty()) {
            Pair curr = q.poll();
            maxTime = Math.max(maxTime, curr.time); 
            
            for (int neigh : adj.get(curr.child)) {
                q.add(new Pair(neigh, curr.time + informTime[curr.child]));
            }
        }
        
        return maxTime;
    }
}
